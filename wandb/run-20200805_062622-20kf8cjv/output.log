Some weights of the model checkpoint at albert-base-v2 were not used when initializing AlbertForSequenceClassification: ['predictions.bias', 'predictions.LayerNorm.weight', 'predictions.LayerNorm.bias', 'predictions.dense.weight', 'predictions.dense.bias', 'predictions.decoder.weight', 'predictions.decoder.bias']
- This IS expected if you are initializing AlbertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing AlbertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of AlbertForSequenceClassification were not initialized from the model checkpoint at albert-base-v2 and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
using device cuda
Using custom data configuration default
  0%|                                                                                                                                                                                            | 0/9427 [00:00<?, ?it/s]  2%|███▍                                                                                                                                                                            | 186/9427 [00:00<00:04, 1856.38it/s]  2%|███▊                                                                                                                                                                            | 204/9427 [00:00<00:05, 1784.83it/s]
Traceback (most recent call last):
  File "main.py", line 95, in <module>
    train_dataset = get_dataset(name="boolq", tokenizer=tokenizer, split='train')
  File "main.py", line 41, in get_dataset
    input_ids = torch.cat((input_ids, tensor_features['input_ids']),0)
RuntimeError: invalid argument 0: Sizes of tensors must match except in dimension 0. Got 512 and 919 in dimension 1 at /pytorch/aten/src/TH/generic/THTensor.cpp:612
