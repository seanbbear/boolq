Some weights of the model checkpoint at albert-base-v2 were not used when initializing AlbertForSequenceClassification: ['predictions.bias', 'predictions.LayerNorm.weight', 'predictions.LayerNorm.bias', 'predictions.dense.weight', 'predictions.dense.bias', 'predictions.decoder.weight', 'predictions.decoder.bias']
- This IS expected if you are initializing AlbertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).
- This IS NOT expected if you are initializing AlbertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of AlbertForSequenceClassification were not initialized from the model checkpoint at albert-base-v2 and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
using device cuda
Using custom data configuration default
Using custom data configuration default
  0%|                                                                                                                                                                                              | 0/15 [00:00<?, ?it/s]epoch: 1 batch:   1 train_loss:0.7090 train_acc:62.5000
epoch: 1 batch:  51 train_loss:0.6912 train_acc:53.4314
epoch: 1 batch: 101 train_loss:0.6695 train_acc:59.1584
epoch: 1 batch: 151 train_loss:0.6629 train_acc:61.0927
epoch: 1 batch: 201 train_loss:0.6648 train_acc:61.2562
epoch: 1 batch: 251 train_loss:0.6641 train_acc:61.7032
epoch: 1 batch: 301 train_loss:0.6682 train_acc:60.6728
epoch: 1 batch: 351 train_loss:0.6677 train_acc:61.0399
epoch: 1 batch: 401 train_loss:0.6682 train_acc:61.2843
epoch: 1 batch: 451 train_loss:0.6684 train_acc:61.4468
epoch: 1 batch: 501 train_loss:0.6667 train_acc:61.7515
epoch: 1 batch: 551 train_loss:0.6682 train_acc:61.2976
epoch: 1 batch: 601 train_loss:0.6660 train_acc:61.6473
epoch: 1 batch: 651 train_loss:0.6676 train_acc:61.5591
epoch: 1 batch: 701 train_loss:0.6687 train_acc:61.3231
epoch: 1 batch: 751 train_loss:0.6672 train_acc:61.6178
epoch: 1 batch: 801 train_loss:0.6683 train_acc:61.3296
epoch: 1 batch: 851 train_loss:0.6690 train_acc:61.2515
epoch: 1 batch: 901 train_loss:0.6686 train_acc:61.4040
epoch: 1 batch: 951 train_loss:0.6677 train_acc:61.6193
epoch: 1 batch:1001 train_loss:0.6679 train_acc:61.6508
epoch: 1 batch:1051 train_loss:0.6677 train_acc:61.7507
epoch: 1 batch:1101 train_loss:0.6679 train_acc:61.7507
epoch: 1 batch:1151 train_loss:0.6685 train_acc:61.6421
epoch: 1 batch:   1 test_loss:0.7022 test_acc:50.0000
  0%|                                                                                                                                                                                              | 0/15 [08:40<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 83, in <module>
    labels = batch_dict[3]
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 893, in forward
    output_hidden_states=output_hidden_states,
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 563, in forward
    output_hidden_states=output_hidden_states,
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 346, in forward
    output_hidden_states,
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 299, in forward
    layer_output = albert_layer(hidden_states, attention_mask, head_mask[layer_index], output_attentions)
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 277, in forward
    attention_output = self.attention(hidden_states, attention_mask, head_mask, output_attentions)
  File "/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/transformers/modeling_albert.py", line 247, in forward
    context_layer = context_layer.permute(0, 2, 1, 3).contiguous()
RuntimeError: CUDA out of memory. Tried to allocate 12.00 MiB (GPU 0; 10.91 GiB total capacity; 10.28 GiB already allocated; 13.00 MiB free; 10.29 GiB reserved in total by PyTorch)
